buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }//ext라는 키워드는 build.gradle에서 사용하는 전역변수를 설정하겠다.
     //springBootVersion 전역변수를 생성하고 그 값을 '2.1.7.RELEASE'로 하겠다.
     //즉, spring-boot-gradle-plugin라는 스프링 부트 그레이들 플러그인의 2.1.7.RELEASE를 의존성으로 받겠다 라는 의미다.

    repositories {
        mavenCentral()
        jcenter()
    }//각종 의존성들을 어떤 원격 저장소에서 받을지 정한다.

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }//프로젝트 개발에 필요한 의존성들을 선언하는 곳

}//의존성 관리를 위한 설정

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' //스프링 부트의 의존성들을 관리해 주는 플러그인 (필수)
//스프링 부트 사용하기 위한 필수 플러그인1, 2, 3, 4


group 'com.yogo.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.projectlombok:lombok')

    //P86 추가
    compile('org.springframework.boot:spring-boot-starter-data-jpa')    // (1)
    compile('com.h2database:h2')    // (2)

    compile('org.springframework.boot:spring-boot-starter-web')         // 와
    testCompile('org.springframework.boot:spring-boot-starter-test')    // 를 받도록 선언

    //P131 추가
    compile('org.springframework.boot:spring-boot-starter-mustache')
}

// (1)  spring-boot-starter-data-jpa
//          - 스프링 부트용 Spring Data Jpa 추상화 라이브러리
//          - 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리해 준다.
// (2) h2
//          - 인메모리 관계형 데이터베이스
//          - 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있다.
//          - 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용
//          - 이 책에서는 JPA의 테스트, 로컬 환경에서의 구동에서 사용할 예정
